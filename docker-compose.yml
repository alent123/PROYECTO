version: '3.8'

services:
  # Servidor web con PHP y Nginx
  app:
    build:
      context: ./retrolector
      dockerfile: Dockerfile
    container_name: retrolector_app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./retrolector:/var/www
      - ./retrolector/storage:/var/www/storage
      - ./retrolector/bootstrap/cache:/var/www/bootstrap/cache
    networks:
      - retrolector_network
    depends_on:
      - db
      - redis

  # Servidor web Nginx
  nginx:
    image: nginx:alpine
    container_name: retrolector_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./retrolector:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/ssl:/etc/nginx/ssl
    networks:
      - retrolector_network
    depends_on:
      - app

  # Base de datos MySQL
  db:
    image: mysql:8.0
    container_name: retrolector_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: retrolector
      MYSQL_ROOT_PASSWORD: retrolector_root_password
      MYSQL_USER: retrolector_user
      MYSQL_PASSWORD: retrolector_password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - retrolector_network

  # Redis para caché y sesiones
  redis:
    image: redis:alpine
    container_name: retrolector_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - retrolector_network

  # PHPMyAdmin para gestión de base de datos
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: retrolector_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: retrolector_root_password
    ports:
      - "8080:80"
    networks:
      - retrolector_network
    depends_on:
      - db

  # MailHog para testing de emails
  mailhog:
    image: mailhog/mailhog
    container_name: retrolector_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - retrolector_network

  # Elasticsearch para búsquedas avanzadas (opcional)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: retrolector_elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - retrolector_network

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
  elasticsearch_data:
    driver: local

networks:
  retrolector_network:
    driver: bridge 